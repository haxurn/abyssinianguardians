"use client"
import { motion } from "framer-motion"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"

const heatmapData = [
  { day: "Mon", hours: Array.from({ length: 24 }, (_, i) => ({ hour: i, value: Math.floor(Math.random() * 10) })) },
  { day: "Tue", hours: Array.from({ length: 24 }, (_, i) => ({ hour: i, value: Math.floor(Math.random() * 10) })) },
  { day: "Wed", hours: Array.from({ length: 24 }, (_, i) => ({ hour: i, value: Math.floor(Math.random() * 10) })) },
  { day: "Thu", hours: Array.from({ length: 24 }, (_, i) => ({ hour: i, value: Math.floor(Math.random() * 10) })) },
  { day: "Fri", hours: Array.from({ length: 24 }, (_, i) => ({ hour: i, value: Math.floor(Math.random() * 10) })) },
  { day: "Sat", hours: Array.from({ length: 24 }, (_, i) => ({ hour: i, value: Math.floor(Math.random() * 10) })) },
  { day: "Sun", hours: Array.from({ length: 24 }, (_, i) => ({ hour: i, value: Math.floor(Math.random() * 10) })) },
]

const getIntensityColor = (value: number) => {
  if (value === 0) return "bg-muted/30"
  if (value <= 2) return "bg-green-200 dark:bg-green-900/30"
  if (value <= 4) return "bg-green-400 dark:bg-green-700/50"
  if (value <= 6) return "bg-yellow-400 dark:bg-yellow-600/50"
  if (value <= 8) return "bg-orange-400 dark:bg-orange-600/50"
  return "bg-red-500 dark:bg-red-600/70"
}

interface VulnerabilityHeatmapProps {
  timeRange: string
}

export function VulnerabilityHeatmap({ timeRange }: VulnerabilityHeatmapProps) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: 0.3 }}
    >
      <Card className="hover:shadow-lg transition-shadow duration-300">
        <CardHeader>
          <div className="flex items-center justify-between">
            <CardTitle className="flex items-center gap-2">
              Vulnerability Discovery Heatmap
              <Badge variant="outline" className="bg-purple-500/10 text-purple-500">
                {timeRange}
              </Badge>
            </CardTitle>
            <div className="flex items-center gap-2 text-xs">
              <span>Less</span>
              <div className="flex gap-1">
                <div className="w-3 h-3 rounded-sm bg-muted/30" />
                <div className="w-3 h-3 rounded-sm bg-green-200 dark:bg-green-900/30" />
                <div className="w-3 h-3 rounded-sm bg-green-400 dark:bg-green-700/50" />
                <div className="w-3 h-3 rounded-sm bg-yellow-400 dark:bg-yellow-600/50" />
                <div className="w-3 h-3 rounded-sm bg-orange-400 dark:bg-orange-600/50" />
                <div className="w-3 h-3 rounded-sm bg-red-500 dark:bg-red-600/70" />
              </div>
              <span>More</span>
            </div>
          </div>
        </CardHeader>
        <CardContent>
          <div className="space-y-2">
            {/* Hour labels */}
            <div className="flex gap-1 ml-12">
              {Array.from({ length: 24 }, (_, i) => (
                <div key={i} className="w-4 text-xs text-center text-muted-foreground">
                  {i % 6 === 0 ? i : ""}
                </div>
              ))}
            </div>

            {/* Heatmap grid */}
            {heatmapData.map((dayData, dayIndex) => (
              <motion.div
                key={dayData.day}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: dayIndex * 0.1 }}
                className="flex items-center gap-1"
              >
                <div className="w-10 text-xs text-muted-foreground text-right">{dayData.day}</div>
                <div className="flex gap-1">
                  {dayData.hours.map((hourData, hourIndex) => (
                    <motion.div
                      key={hourIndex}
                      whileHover={{ scale: 1.2, zIndex: 10 }}
                      className={`w-4 h-4 rounded-sm cursor-pointer transition-all ${getIntensityColor(hourData.value)}`}
                      title={`${dayData.day} ${hourData.hour}:00 - ${hourData.value} vulnerabilities`}
                    />
                  ))}
                </div>
              </motion.div>
            ))}
          </div>

          <div className="mt-6 p-4 rounded-lg bg-gradient-to-r from-purple-500/5 to-pink-500/5 border border-purple-500/10">
            <h4 className="font-semibold text-sm mb-2">Pattern Analysis</h4>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-xs text-muted-foreground">
              <div>
                <div className="font-medium text-foreground mb-1">Peak Hours</div>
                <ul className="space-y-1">
                  <li>• 9-11 AM: Morning vulnerability scans</li>
                  <li>• 2-4 PM: Post-lunch security reviews</li>
                  <li>• 7-9 PM: Evening automated testing</li>
                </ul>
              </div>
              <div>
                <div className="font-medium text-foreground mb-1">Weekly Patterns</div>
                <ul className="space-y-1">
                  <li>• Tuesday-Thursday: Highest activity</li>
                  <li>• Monday: Gradual ramp-up</li>
                  <li>• Weekend: Automated scans only</li>
                </ul>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  )
}
